###############################################################################
# Copyright (C) 2010 Lawrence Livermore National Security, LLC.
# Written by Brian Behlendorf <behlendorf1@llnl.gov>.
###############################################################################
# Build targets for DEB packages.
#
# Long term native distro specific Debian style packaging should be added.
# In the short term RPM packages are built and converted to DEB packages
# using alien.  If someone familiar with Debian style packaging were to
# update the build system to correctly build Debian style packages I would
# happily take it.  Until then we will have to make due with alien.
#
###############################################################################

deb-local:
	@(if test "${HAVE_DPKGBUILD}" = "no"; then \
		echo -e "\n" \
	"*** Required util ${DPKGBUILD} missing.  Please install the\n" \
        "*** package for your distribution which provides ${DPKGBUILD},\n" \
	"*** re-run configure, and try again.\n"; \
                exit 1; \
	fi; \
	if test "${HAVE_ALIEN}" = "no"; then \
		echo -e "\n" \
	"*** Required util ${ALIEN} missing.  Please install the\n" \
        "*** package for your distribution which provides ${ALIEN},\n" \
	"*** re-run configure, and try again.\n"; \
                exit 1; \
	fi)

if CONFIG_KERNEL
deb-modules: deb-local rpm-modules
	name=${PACKAGE}-modules; \
	version=${SPL_META_VERSION}-${SPL_META_RELEASE}; \
	release=`echo ${LINUX_VERSION} | $(SED) -e "s/-/_/g"`; \
	arch=`$(RPM) -qp $${name}-$${version}.src.rpm --qf %{arch} | tail -1`; \
	pkg1=$${name}-$${version}_$${release}.$${arch}.rpm; \
	pkg2=$${name}-devel-$${version}_$${release}.$${arch}.rpm; \
	fakeroot $(ALIEN) --scripts --to-deb $$pkg1 $$pkg2; \
	$(RM) $$pkg1 $$pkg2
else
deb-modules:
endif

if CONFIG_USER
deb-utils: deb-local rpm-utils
	name=${PACKAGE}; \
	version=${SPL_META_VERSION}-${SPL_META_RELEASE}; \
	arch=`$(RPM) -qp $${name}-$${version}.src.rpm --qf %{arch} | tail -1`; \
	pkg1=$${name}-$${version}.$${arch}.rpm; \
	fakeroot $(ALIEN) --scripts --to-deb $$pkg1; \
	$(RM) $$pkg1
else
deb-utils:
endif

deb: deb-modules deb-utils
